# Auto-generated by EclipseNSIS Script Wizard
# 2011-3-18 10:08:40

Name sdclient
AutoCloseWindow false
RequestExecutionLevel admin

# General Symbol Definitions
!define REGKEY "SOFTWARE\$(^Name)"
!define VERSION 1.0.0.1
!define COMPANY "西联数据"
!define URL http://www.pushan.com

# MUI Symbol Definitions
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\xinst.ico"
!define MUI_FINISHPAGE_NOAUTOCLOSE
!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKCU
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
!define MUI_STARTMENUPAGE_DEFAULTFOLDER sdclient
!define MUI_FINISHPAGE_RUN $INSTDIR\logiwiza.exe
!define MUI_FINISHPAGE_SHOWREADME $INSTDIR\Readme.txt
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\xuninst.ico"
!define MUI_UNFINISHPAGE_NOAUTOCLOSE

# Included files
!include "Sections.nsh"
!include "MUI2.nsh"
!include "Library.nsh"
!include "x64.nsh"
!include "FileFunc.nsh"

# Variables
Var StartMenuGroup
Var LibInstall

# Installer pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE License.txt
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE "OnLeaveDire"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

# Installer languages
!insertmacro MUI_LANGUAGE English
!insertmacro MUI_LANGUAGE SimpChinese
!insertmacro MUI_LANGUAGE TradChinese

# Installer attributes
OutFile Output\sdclient_setup.exe
InstallDir $PROGRAMFILES64\sdclient
CRCCheck on
XPStyle on
ShowInstDetails show
VIProductVersion 0.87.0.0
VIAddVersionKey /LANG=${LANG_ENGLISH} ProductName sdclient
VIAddVersionKey /LANG=${LANG_ENGLISH} ProductVersion "${VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} CompanyName "${COMPANY}"
VIAddVersionKey /LANG=${LANG_ENGLISH} CompanyWebsite "${URL}"
VIAddVersionKey /LANG=${LANG_ENGLISH} FileVersion "${VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} FileDescription "同步网盘安装程序"
VIAddVersionKey /LANG=${LANG_ENGLISH} LegalCopyright "(C) 西联数据 保留所有权利。"
InstallDirRegKey HKCU "${REGKEY}" Path
ShowUninstDetails show

# Installer sections
Section "Main" SEC0000
DetailPrint "Main SEC0000"
    SetOutPath $INSTDIR
    SetOverwrite on
    File Configuration.XML
    File FileForbid.XML
    File sdclient-i386.sys
    File sdclient-amd64.sys
    File sdclient-ia64.sys
    File liveupda.exe
    File logiwiza.exe
    File sdshare.exe
    File sdclient.exe
    File Microsoft.VC90.CRT.manifest
    File msvcp90.dll
    File msvcr90.dll
    File Microsoft.VC90.MFC.manifest
    File mfc90u.dll
    File License.txt
    File Readme.txt
    File sdclient.chm
    File "sdclient user guide.pdf"
##########
    WriteRegStr HKCU "${REGKEY}\Components" Main 1
SectionEnd

Section "InstLibrary" SEC0001
DetailPrint "InstLibrary SEC0001"
    # Installing library
    !insertmacro InstallLib DLL $LibInstall REBOOT_PROTECTED sdservi.dll $INSTDIR\sdservi.dll $INSTDIR
    !insertmacro InstallLib DLL $LibInstall REBOOT_PROTECTED libexpat.dll $INSTDIR\libexpat.dll $INSTDIR
    !insertmacro InstallLib DLL $LibInstall REBOOT_PROTECTED libresiz.dll $INSTDIR\libresiz.dll $INSTDIR
##########
    SetOutPath $TEMP
    SetOverwrite on
    File sdservi.dll
# System::Call "$TEMP\sdservi::DebugDetail(p $HWNDPARENT, w 'InstLibrary out file', w 'Debug', i 0) ?u"
##########
    WriteRegStr HKCU "${REGKEY}\Components" InstLibrary 1
SectionEnd

Section "LoadDriver" SEC0002
DetailPrint "LoadDriver SEC0002"
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntCmp 0 $0 +1 done
    ###################
    ${If} ${RunningX64} 
	${DisableX64FSRedirection} 
	SetOutPath $SYSDIR\drivers
	SetOverwrite on
	File sdclient-amd64.sys
	############################## enable device drivers
DetailPrint "enable device drivers"
# System::Call "$TEMP\sdservi::DebugDetail(p $HWNDPARENT, w 'Enable $SYSDIR\drivers\sdclient-amd64.sys', w 'Debug', i 0) ?u"
	System::Call "$TEMP\sdservi::EnableDeviceDriver(w '$SYSDIR\drivers\sdclient-amd64.sys', w 'sdclient') ?u"
        ${EnableX64FSRedirection} 
    ${Else}
	SetOutPath $SYSDIR\drivers
	SetOverwrite on
	File sdclient-i386.sys
	############################## enable device drivers
DetailPrint "enable device drivers"
# System::Call "$TEMP\sdservi::DebugDetail(p $HWNDPARENT, w 'Enable $SYSDIR\drivers\sdclient-i386.sys', w 'Debug', i 0) ?u"
	System::Call "$TEMP\sdservi::EnableDeviceDriver(w '$SYSDIR\drivers\sdclient-i386.sys', w 'sdclient') ?u"
    ${EndIf}
done:
    WriteRegStr HKCU "${REGKEY}\Components" LoadDriver 1
    ##########
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    WriteRegDWORD HKCU "${REGKEY}" DeviceNumber $0
SectionEnd

##############################
# add overlays need function
##############################
Function AddOverlays
    System::Call "$TEMP\sdservi::EndApplica(w 'explorer.exe') ?u"
    ${If} ${RunningX64} 
    	${DisableX64FSRedirection} 
	System::Call "$TEMP\sdservi::ExecuteApplicaEx(w '$WINDIR\explorer.exe', w 'explorer.exe', i 1) ?u"
        ${EnableX64FSRedirection} 
    ${Else}
	System::Call "$TEMP\sdservi::ExecuteApplicaEx(w '$WINDIR\explorer.exe', w 'explorer.exe', i 1) ?u"
    ${EndIf}
FunctionEnd

Section "SWDOverlays" SEC0003
DetailPrint "SWDOverlays SEC0003"
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntCmp 0 $0 +1 done
    ###################
    ${If} ${RunningX64} 
	SetOutPath $COMMONFILES64\SWDOverlays\icons
	SetOverwrite on
	File /r icons\*
	# Installing library SWDOverlaysX64.dll   
DetailPrint "addition overlays"
	!define LIBRARY_X64
	!insertmacro InstallLib REGDLL $LibInstall REBOOT_PROTECTED SWDOverlaysX64.dll $COMMONFILES64\SWDOverlays\SWDOverlaysX64.dll $INSTDIR
	!undef LIBRARY_X64
    ${Else}
	SetOutPath $COMMONFILES\SWDOverlays\icons
	SetOverwrite on
	File /r icons\*
	# Installing library SWDOverlaysX86.dll   
DetailPrint "addition overlays"
	!insertmacro InstallLib REGDLL $LibInstall REBOOT_PROTECTED SWDOverlaysX86.dll $COMMONFILES\SWDOverlays\SWDOverlaysX86.dll $INSTDIR
    ${EndIf}
    ############################## add overlays	 
DetailPrint "refersh the explorer"
    call AddOverlays
    ##########
done:
    WriteRegStr HKCU "${REGKEY}\Components" SWDOverlays 1
SectionEnd

Section "AddIcons" SEC0004
DetailPrint "AddIcons SEC0004"
    SetOutPath $DESKTOP
    CreateShortcut $DESKTOP\sdclient.lnk $INSTDIR\sdclient.exe
    SetOutPath $SMPROGRAMS\$StartMenuGroup
    CreateShortcut $SMPROGRAMS\$StartMenuGroup\sdclient.lnk $INSTDIR\sdclient.exe
    CreateShortcut $SMPROGRAMS\$StartMenuGroup\logiwiza.lnk $INSTDIR\logiwiza.exe
    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\sdclient user guide.lnk" "$INSTDIR\sdclient user guide.pdf"
    WriteRegStr HKCU "${REGKEY}\Components" AddIcons 1
SectionEnd

!define REUNI "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
Section "Post" SEC0005
DetailPrint "Post SEC0005"
    WriteRegDword HKCU "${REGKEY}" Installed 1
    WriteRegStr HKCU "${REGKEY}" Path $INSTDIR
    SetOutPath $INSTDIR
    WriteUninstaller $INSTDIR\uninstall.exe
    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    SetOutPath $SMPROGRAMS\$StartMenuGroup
    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk" $INSTDIR\uninstall.exe
    !insertmacro MUI_STARTMENU_WRITE_END
    WriteRegStr HKCU "${REUNI}\$(^Name)" DisplayName "$(^Name)"
    WriteRegStr HKCU "${REUNI}\$(^Name)" DisplayVersion "${VERSION}"
    WriteRegStr HKCU "${REUNI}\$(^Name)" Publisher "${COMPANY}"
    WriteRegStr HKCU "${REUNI}\$(^Name)" URLInfoAbout "${URL}"
    WriteRegStr HKCU "${REUNI}\$(^Name)" DisplayIcon $INSTDIR\uninstall.exe
    WriteRegStr HKCU "${REUNI}\$(^Name)" UninstallString $INSTDIR\uninstall.exe
    WriteRegDWORD HKCU "${REUNI}\$(^Name)" NoModify 1
    WriteRegDWORD HKCU "${REUNI}\$(^Name)" NoRepair 1
    ##########
    Delete /REBOOTOK $TEMP\sdservi.dll
SectionEnd

# Uninstaller sections
Function un.DeleUserSpace
    ############################## dele user pool
    MessageBox MB_YESNO|MB_ICONQUESTION|MB_DEFBUTTON2 " 是否删除本地用户数据." \
	/SD IDNO IDNO +2
    System::Call "$TEMP\sdservi::DeleUserSpace() ?u"
FunctionEnd

Section "un.Post" UNSEC0005
DetailPrint "un.Post UNSEC0005"
    CopyFiles /SILENT /FILESONLY $INSTDIR\sdservi.dll $TEMP
    ##########
    call un.DeleUserSpace
    ##########
    DeleteRegKey HKCU "${REUNI}\$(^Name)"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk"
    Delete /REBOOTOK $INSTDIR\uninstall.exe
    DeleteRegValue HKCU "${REGKEY}" StartMenuGroup
    DeleteRegValue HKCU "${REGKEY}" Path
    DeleteRegValue HKCU "${REGKEY}" Installed
    DeleteRegKey /IfEmpty HKCU "${REGKEY}\Components"
    DeleteRegKey /IfEmpty HKCU "${REGKEY}"
    RmDir /REBOOTOK $SMPROGRAMS\$StartMenuGroup
    RmDir /REBOOTOK $INSTDIR
SectionEnd

Section "un.AddIcons" UNSEC0004
DetailPrint "un.AddIcons UNSEC0004"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\sdclient user guide.lnk"
    Delete /REBOOTOK $SMPROGRAMS\$StartMenuGroup\logiwiza.lnk
    Delete /REBOOTOK $SMPROGRAMS\$StartMenuGroup\sdclient.lnk
    Delete /REBOOTOK $DESKTOP\sdclient.lnk
    DeleteRegValue HKCU "${REGKEY}\Components" AddIcons
SectionEnd

##############################
# delete overlays need function
##############################
!define REOVE "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShellIconOverlayIdentifiers"
Function un.DeleteOverlays
    DeleteRegKey HKLM "${REOVE}\00SWD_Added"
    DeleteRegKey HKLM "${REOVE}\00SWD_Conflict"
    DeleteRegKey HKLM "${REOVE}\00SWD_Delete"
    DeleteRegKey HKLM "${REOVE}\00SWD_Forbid"
    DeleteRegKey HKLM "${REOVE}\00SWD_Locked"
    DeleteRegKey HKLM "${REOVE}\00SWD_Modified"
    DeleteRegKey HKLM "${REOVE}\00SWD_Normal"
    DeleteRegKey HKLM "${REOVE}\00SWD_ReadOnly"
    DeleteRegKey HKLM "${REOVE}\00SWD_Syncing"
# System::Call "$TEMP\sdservi::DebugDetail(p $HWNDPARENT, w 'disable icons service', w 'Debug', i 0) ?u"
    System::Call "$TEMP\sdservi::EndApplica(w 'explorer.exe') ?u"
    ${If} ${RunningX64} 
    	${DisableX64FSRedirection} 
	System::Call "$TEMP\sdservi::ExecuteApplicaEx(w '$WINDIR\explorer.exe', w 'explorer.exe', i 1) ?u"
        ${EnableX64FSRedirection} 
    ${Else}
	System::Call "$TEMP\sdservi::ExecuteApplicaEx(w '$WINDIR\explorer.exe', w 'explorer.exe', i 1) ?u"
    ${EndIf}
FunctionEnd

Section "un.SWDOverlays" UNSEC0003
DetailPrint "un.SWDOverlays UNSEC0003"
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntOp $0 $0 - 1
    IntCmp 0 $0 +1 done
    ############################## Delete overlays
DetailPrint "call delete overlays"
    call un.DeleteOverlays
    # Uninstalling library $COMMONFILES\SWDOverlays\SWDOverlaysX86.dll
    ${If} ${RunningX64}
	!define LIBRARY_X64
	!insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED $COMMONFILES64\SWDOverlays\SWDOverlaysX64.dll
	!undef LIBRARY_X64
	##########
	RmDir /r /REBOOTOK $COMMONFILES64\SWDOverlays
    ${Else}
	!insertmacro UnInstallLib REGDLL SHARED REBOOT_PROTECTED $COMMONFILES\SWDOverlays\SWDOverlaysX86.dll
	##########
	RmDir /r /REBOOTOK $COMMONFILES\SWDOverlays
    ${EndIf}
done:
    DeleteRegValue HKCU "${REGKEY}\Components" SWDOverlays
SectionEnd

Section "un.LoadDriver" UNSEC0002
DetailPrint "un.LoadDriver UNSEC0002"
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntOp $0 $0 - 1
    IntCmp 0 $0 +1 done
    ############################## disable device drivers
DetailPrint "disable device drivers"
# System::Call "$TEMP\sdservi::DebugDetail(p $HWNDPARENT, w 'Disable $SYSDIR\drivers\sdclient-amd64.sys', w 'Debug', i 0) ?u"
    System::Call "$TEMP\sdservi::DisableDeviceDriver(w 'sdclient') ?u"
    ${If} ${RunningX64} 
    	${DisableX64FSRedirection} 
        Delete /REBOOTOK $SYSDIR\drivers\sdclient-amd64.sys
        ${EnableX64FSRedirection} 
    ${Else}
	Delete /REBOOTOK $SYSDIR\drivers\sdclient-i386.sys
    ${EndIf}
    ##########
done:
    DeleteRegValue HKCU "${REGKEY}\Components" LoadDriver
SectionEnd

Section "un.InstLibrary" UNSEC0001
DetailPrint "un.InstLibrary UNSEC0001"
    Delete /REBOOTOK $TEMP\sdservi.dll
    # Uninstalling library
    !insertmacro UnInstallLib DLL NOTSHARED REBOOT_PROTECTED $INSTDIR\libresiz.dll
    !insertmacro UnInstallLib DLL NOTSHARED REBOOT_PROTECTED $INSTDIR\libexpat.dll
    !insertmacro UnInstallLib DLL NOTSHARED REBOOT_PROTECTED $INSTDIR\sdservi.dll
    ##########
    DeleteRegValue HKCU "${REGKEY}\Components" InstLibrary
SectionEnd

Section "un.Main" UNSEC0000
DetailPrint "un.Main UNSEC0000"
    Delete /REBOOTOK "$INSTDIR\sdclient user guide.pdf"
    Delete /REBOOTOK $INSTDIR\sdclient.chm
    Delete /REBOOTOK $INSTDIR\Readme.txt
    Delete /REBOOTOK $INSTDIR\License.txt
    Delete /REBOOTOK $INSTDIR\mfc90u.dll
    Delete /REBOOTOK $INSTDIR\Microsoft.VC90.MFC.manifest
    Delete /REBOOTOK $INSTDIR\msvcr90.dll
    Delete /REBOOTOK $INSTDIR\msvcp90.dll
    Delete /REBOOTOK $INSTDIR\Microsoft.VC90.CRT.manifest
    Delete /REBOOTOK $INSTDIR\sdclient.exe
    Delete /REBOOTOK $INSTDIR\sdshare.exe
    Delete /REBOOTOK $INSTDIR\logiwiza.exe
    Delete /REBOOTOK $INSTDIR\liveupda.exe
    Delete /REBOOTOK $INSTDIR\sdclient-ia64.sys
    Delete /REBOOTOK $INSTDIR\sdclient-amd64.sys
    Delete /REBOOTOK $INSTDIR\sdclient-i386.sys
    Delete /REBOOTOK $INSTDIR\FileForbid.XML
    Delete /REBOOTOK $INSTDIR\Configuration.XML
    ##########
    DeleteRegValue HKCU "${REGKEY}\Components" Main
SectionEnd

# Installer functions
Function .onInit
    ############################## 禁止多次安装实例
    ReadRegDWORD $0 HKCU '${REGKEY}' "Installed"
    IntCmp $0 +1 +3
    MessageBox MB_OK|MB_ICONSTOP "$(^Name) 已安装在计算机中.如需重新安装,请卸载已有的安装."
    Quit
    ############################## 禁止一台计算机安装超过4个拷贝
    ReadRegDWORD $0 HKLM '${REGKEY}' "InstallCount"
    IntCmp $0 4 +1 +3
    MessageBox MB_OK|MB_ICONSTOP "$(^Name) 不能在一台计算机中安装过多拷贝."
    Quit
    ############################## Check application has run
    System::Call "kernel32::CreateMutexW(i 0, i 0, w 'sdclient') i .r1 ?e"
    Pop $0
    StrCmp $0 0 +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "$(^Name) instance already running"
    Quit
    ##############################
    InitPluginsDir
    Push $0
    ReadRegStr $0 HKCU "${REGKEY}" Path
    ClearErrors
    StrCmp $0 "" +2
    StrCpy $LibInstall 1
    Pop $0
FunctionEnd

Function .onInstSuccess
    WriteRegStr HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Run" sdclient "$INSTDIR\sdclient.exe"
    ##########
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntOp $0 $0 + 1
    WriteRegDWORD HKLM "${REGKEY}" InstallCount $0
FunctionEnd

# Uninstaller functions
Function un.onInit
    ############################## Check application has run
    System::Call "kernel32::CreateMutexW(i 0, i 0, w 'sdclient') i .r1 ?e"
    Pop $0
    StrCmp $0 0 +3
    MessageBox MB_OK|MB_ICONEXCLAMATION "$(^Name) instance already running"
    Quit
    ##########
    ReadRegStr $INSTDIR HKCU "${REGKEY}" Path
    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup
FunctionEnd

Function un.onUninstSuccess
    DeleteRegValue HKCU "SOFTWARE\Microsoft\Windows\CurrentVersion\Run" sdclient
    RmDir /r /REBOOTOK $INSTDIR
    RmDir /r /REBOOTOK $APPDATA\sdclient
    ###
    ReadRegStr $0 HKLM "${REGKEY}" InstallCount
    IntOp $0 $0 - 1
    IntCmp 0 $0 +1 winco
    DeleteRegKey /IfEmpty HKLM "${REGKEY}"
    Goto done
winco:
    WriteRegDWORD HKLM "${REGKEY}" InstallCount $0
done:
FunctionEnd

Function OnLeaveDire
    ${DirState} "$INSTDIR" $R0
    IntCmp $R0 1 +1 +3
    MessageBox MB_YESNO|MB_ICONQUESTION|MB_DEFBUTTON2 "安装目录存在,是否继续?" IDYES +2
    Abort
FunctionEnd

# Installer Language Strings
# TODO Update the Language Strings with the appropriate translations.

LangString ^UninstallLink ${LANG_ENGLISH} "Uninstall $(^Name)"
LangString ^UninstallLink ${LANG_SIMPCHINESE} "Uninstall $(^Name)"
LangString ^UninstallLink ${LANG_TRADCHINESE} "Uninstall $(^Name)"

